services:
  snip-agent:
    tty: true
    stdin_open: true
    build:
      context: .
      dockerfile_inline: |
        FROM golang:1.25.2-alpine
        WORKDIR /app
        COPY . .

        RUN go mod tidy
        ENTRYPOINT ["go", "run", "main.go"]
    ports:
      - 3500:8080
    environment:
      SYSTEM_INSTRUCTION: |
        You are Snip, an AI assistant that helps users write and understand code snippets.
        You provide concise explanations, code examples, and best practices for various programming tasks.
        Always aim to be clear, helpful, and accurate in your responses.
        IMPORTANT: When providing code examples, concentrate carefully on syntax accuracy:
        - Close all string quotes properly (" or ')
        - Add semicolons (;) where needed
        - Balance all brackets/parentheses
        - Complete all statements
        - Verify syntax is valid
        Provide only well-formed, executable examples. Double-check before responding.


      HTTP_PORT: 8080

      SNIPPETS_FOLDER: snippets
      SIMILARITY_THRESHOLD: 0.65
      SIMILARITY_MAX_RESULTS: 5

      CONTEXT_SIZE_LIMIT: 8192

      MCP_SERVER_BASE_URL: http://mcp-gateway:9011


    volumes:
      - ./data/snippets:/app/snippets
      #- ./store:/app/store      

    models:
      snip-model:
        endpoint_var: MODEL_RUNNER_BASE_URL
        model_var: SNIP_MODEL
      embedding-model:
        endpoint_var: MODEL_RUNNER_BASE_URL
        model_var: EMBEDDING_MODEL
      tools-model:
        endpoint_var: MODEL_RUNNER_BASE_URL
        model_var: TOOLS_MODEL

    depends_on:
      mcp-gateway:
        condition: service_started
        
  mcp-gateway:
    # mcp-gateway secures your MCP servers
    image: docker/mcp-gateway:latest
    ports:
      - 9011:9011
    use_api_socket: true
    command:
      - --port=9011
      - --transport=streaming
      - --verbose
      - --catalog=/mcp/catalog.yaml
      - --servers=mcp-fancy-names,mcp-hello-world,mcp-dnd
    configs:
      - source: catalog.yaml
        target:
          /mcp/catalog.yaml
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      mcp-fancy-names:
        condition: service_healthy
      mcp-hello-world:
        condition: service_healthy
      mcp-dnd:
        condition: service_healthy

  mcp-fancy-names:
    build:
      context: mcp-servers/fancy-names
      dockerfile: Dockerfile    
    environment:
      MCP_HTTP_PORT: 6060
    
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:6060/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mcp-hello-world:
    build:
      context: mcp-servers/hello-world
      dockerfile: Dockerfile
    environment:
      MCP_HTTP_PORT: 6060

    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:6060/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mcp-dnd:
    build:
      context: mcp-servers/dnd
      dockerfile: Dockerfile
    environment:
      MCP_HTTP_PORT: 6060

    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:6060/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s


configs:
  catalog.yaml:
    content: |
      registry:

        mcp-fancy-names:
          remote:
            url: "http://mcp-fancy-names:6060/mcp"
            transport_type: http

        mcp-hello-world:
          remote:
            url: "http://mcp-hello-world:6060/mcp"
            transport_type: http

        mcp-dnd:
          remote:
            url: "http://mcp-dnd:6060/mcp"
            transport_type: http


models:
  snip-model:
    #model: hf.co/menlo/jan-nano-gguf:q4_k_m
    model: hf.co/menlo/lucy-gguf:q4_k_m
    #model: hf.co/qwen/qwen2.5-coder-1.5b-instruct-gguf:q4_k_m
    #model: hf.co/qwen/qwen2.5-coder-3b-instruct-gguf:q4_k_m
    #model: ai/qwen2.5:latest
    context_size: 8192
    runtime_flags:
        - "--temp"                # Temperature
        - "0.0"                   # Set temperature to 0.0  
        - "--verbose"
        - "--verbose-prompt"
  tools-model:
    model: hf.co/menlo/jan-nano-gguf:q4_k_m
    context_size: 8192
    runtime_flags:
        - "--temp"                # Temperature
        - "0.0"                   # Set temperature to 0.0  
        - "--verbose"
        - "--verbose-prompt"

  embedding-model:
    model: ai/mxbai-embed-large:latest

